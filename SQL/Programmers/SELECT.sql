# 3월에 태어난 여성 회원
SELECT MEMBER_ID, MEMBER_NAME, GENDER, DATE_FORMAT(DATE_OF_BIRTH, '%Y-%m-%d') AS DATE_OF_BIRTH
FROM MEMBER_PROFILE
WHERE TLNO IS NOT NULL
  AND GENDER = 'W'
  AND DATE_FORMAT(DATE_OF_BIRTH, '%m') = '03'
ORDER BY MEMBER_ID

# 의사 목록 출력
SELECT DR_NAME, DR_ID, MCDP_CD, DATE_FORMAT(HIRE_YMD, '%Y-%m-%d') as HIRE_YMD
FROM DOCTOR
WHERE MCDP_CD = 'CS' OR MCDP_CD = 'GS'
ORDER BY 4 DESC, 1

# 12세 이하 여자 아이
SELECT PT_NAME, PT_NO, GEND_CD, AGE, COALESCE(TLNO, "NONE") AS TLNO
FROM PATIENT
WHERE GEND_CD = 'W'
  AND AGE <= 12
ORDER BY 4 DESC, 1

# 인기 있는 아이스크림
SELECT FLAVOR
FROM FIRST_HALF
ORDER BY TOTAL_ORDER DESC, SHIPMENT_ID

# 재구매한 상품 + 회원 리스트
SELECT PT_NAME, PT_NO, GEND_CD, AGE, COALESCE(TLNO, "NONE") AS TLNO
FROM PATIENT
WHERE GEND_CD = 'W'
  AND AGE <= 12
ORDER BY 4 DESC, 1

# 조건에 맞는 회원수 구하기
SELECT COUNT(*) AS USERS
FROM USER_INFO
WHERE YEAR(JOINED) = 2021 AND AGE >= 20 AND AGE <= 29

# 조건에 맞는 도서 리스트 출력하기
SELECT BOOK_ID, DATE_FORMAT(PUBLISHED_DATE, '%Y-%m-%d')
FROM BOOK
WHERE YEAR(PUBLISHED_DATE) = 2021 AND CATEGORY = '인문'
ORDER BY 2 

# 과일로 만든 아이스크림 고르기
SELECT FH.FLAVOR
FROM FIRST_HALF FH
JOIN ICECREAM_INFO II ON FH.FLAVOR = II.FLAVOR
WHERE FH.TOTAL_ORDER >= 3000 AND II.INGREDIENT_TYPE = 'fruit_based'

# 강원도에 위치한 생산공정 목록
SELECT FACTORY_ID, FACTORY_NAME, ADDRESS
FROM FOOD_FACTORY
WHERE ADDRESS LIKE '%강원도%'
ORDER BY 1

# 상위 n개 레코드
SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME LIMIT 1

# 서울에 위치한 식당 목록
SELECT RR.REST_ID, REST_NAME, FOOD_TYPE, FAVORITES, ADDRESS, ROUND(AVG(RR.REVIEW_SCORE), 2) AS SCORE
FROM REST_INFO RI
JOIN REST_REVIEW RR ON RR.REST_ID = RI.REST_ID
GROUP BY 1
HAVING ADDRESS LIKE '서울%'
ORDER BY 6 DESC, 4 DESC

# 오프라인/온라인 판매 데이터 통합하기 / UNION ALL 함수 인지
SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT
FROM ONLINE_SALE ONS
WHERE YEAR(SALES_DATE) = 2022 AND MONTH(SALES_DATE) = 03
UNION ALL
SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, NULL AS USER_ID, SALES_AMOUNT
FROM OFFLINE_SALE OFS
WHERE YEAR(SALES_DATE) = 2022 AND MONTH(SALES_DATE) = 03
ORDER BY 1, 2, 3

# 모든 레코드 조회하기
SELECT *
FROM ANIMAL_INS
ORDER BY 1

# 아픈 동물 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION = 'SICK'
ORDER BY ANIMAL_ID

# 역순 정렬하기 lv.1
SELECT NAME, DATETIME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID DESC

# 여러 기준으로 정렬하기
SELECT ANIMAL_ID, NAME, DATETIME
FROM ANIMAL_INS
ORDER BY 2, 3 DESC

# 동물의 아이디와 이름
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
ORDER BY 1

# 어린 동물 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION != 'Aged'
ORDER BY 1